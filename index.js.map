{"version":3,"file":"./index.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./scripts/settings.js","webpack:///./scripts/app.js","webpack:///./scripts/main.js","webpack:///./scripts/config.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { MODULE_ID } from \"./main.js\";\r\n\r\nexport function registerSettings() {\r\n    const settings = {\r\n        \"gridSize\": {\r\n            name: `${MODULE_ID}.settings.gridSize.name`,\r\n            hint: `${MODULE_ID}.settings.gridSize.hint`,\r\n            scope: \"world\",\r\n            config: true,\r\n            default: 100,\r\n            type: Number,\r\n        }\r\n    };\r\n\r\n    registerSettingsArray(settings);\r\n}\r\n\r\nexport function getSetting(key) {\r\n    return game.settings.get(MODULE_ID, key);\r\n}\r\n\r\nexport async function setSetting(key, value) {\r\n    return await game.settings.set(MODULE_ID, key, value);\r\n}\r\n\r\nfunction registerSettingsArray(settings) {\r\n    for(const [key, value] of Object.entries(settings)) {\r\n        game.settings.register(MODULE_ID, key, value);\r\n    }\r\n}","import {MODULE_ID} from \"./main.js\";\r\nimport {getSetting} from \"./settings.js\";\r\n\r\nconst f = Math.sqrt(3) / 2;\r\n\r\nconst localeMap = {\r\n    GRIDLESS: \"SCENES.GridGridless\",\r\n    HEXEVENQ: \"SCENES.GridHexEvenQ\",\r\n    HEXEVENR: \"SCENES.GridHexEvenR\",\r\n    HEXODDQ: \"SCENES.GridHexOddQ\",\r\n    HEXODDR: \"SCENES.GridHexOddR\",\r\n    SQUARE: \"SCENES.GridSquare\",\r\n};\r\n\r\nexport class QuickGridAlign extends FormApplication {\r\n    constructor(scene) {\r\n        super();\r\n        this.scene = scene ?? canvas?.scene;\r\n        this.gridType = Object.entries(CONST.GRID_TYPES).find(([, value]) => value === this.scene.grid.type)[0];\r\n        this.gridSize = getSetting(\"gridSize\");\r\n    }\r\n\r\n    static get APP_ID() {\r\n        return \"quick-grid-align-app\";\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: this.APP_ID,\r\n            template: `modules/${MODULE_ID}/templates/${this.APP_ID}.hbs`,\r\n            popOut: true,\r\n            resizable: false,\r\n            minimizable: true,\r\n            width: 400,\r\n            title: game.i18n.localize(`${MODULE_ID}.${this.APP_ID}.title`),\r\n            closeOnSubmit: false,\r\n        });\r\n    }\r\n\r\n    get title() {\r\n        return game.i18n.localize(`${MODULE_ID}.${this.constructor.APP_ID}.title`) + ` - ${this.scene.name}`;\r\n    }\r\n\r\n    async getData() {\r\n       return {\r\n            gridType: localeMap[this.gridType],\r\n            horizontal: Math.round(this.scene.dimensions.sceneWidth / this.scene.dimensions.size),\r\n            vertical: Math.round(this.scene.dimensions.sceneHeight / this.scene.dimensions.size),\r\n        };\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n        html = html[0] ?? html;\r\n        const canvasContainer = html.querySelector(\".quick-grid-align-canvas-container\");\r\n        this.createCanvasPreview(canvasContainer);\r\n    }\r\n\r\n    async createCanvasPreview(canvasContainer) {\r\n\r\n        const dotPositions = {\r\n            start: {\r\n                x: 0,\r\n                y: 0,\r\n            },\r\n            end: {\r\n                x: 0,\r\n                y: 0,\r\n            },\r\n        }\r\n\r\n        const measurements = [];\r\n\r\n        const src = this.scene.background.src;\r\n        const img = new Image();\r\n        img.src = src;\r\n        await new Promise((resolve) => {\r\n            img.onload = resolve;\r\n        });\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = 300;\r\n        canvas.height = 300;\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        function redrawCanvas() {\r\n            console.log(\"redraw\");\r\n            const randomX = Math.random() * (img.width - canvas.width);\r\n            const randomY = Math.random() * (img.height - canvas.height);\r\n            ctx.drawImage(img, randomX, randomY, canvas.width, canvas.height, 0, 0, canvas.width, canvas.height);\r\n        }\r\n\r\n        canvasContainer.appendChild(canvas);\r\n        redrawCanvas();\r\n\r\n        const dotSize = 30;\r\n\r\n        const dotStart = document.createElement(\"div\");\r\n        dotStart.classList.add(\"quick-grid-align-canvas-dot\", \"start\");\r\n        dotStart.style.width = `${dotSize}px`;\r\n        dotStart.style.height = `${dotSize}px`;\r\n        dotStart.style.display = \"none\";\r\n\r\n        const dotEnd = document.createElement(\"div\");\r\n        dotEnd.classList.add(\"quick-grid-align-canvas-dot\", \"end\");\r\n        dotEnd.style.display = \"none\";\r\n        dotEnd.style.width = `${dotSize}px`;\r\n        dotEnd.style.height = `${dotSize}px`;\r\n\r\n        canvasContainer.appendChild(dotStart);\r\n        canvasContainer.appendChild(dotEnd);\r\n\r\n        function addCrosshair(dotElement) {\r\n            const crosshair = document.createElement(\"div\");\r\n            crosshair.classList.add(\"quick-grid-align-canvas-crosshair\");\r\n            crosshair.style.width = `100%`;\r\n            crosshair.style.height = `1px`;\r\n            crosshair.style.left = `0px`;\r\n            crosshair.style.top = `50%`;\r\n            dotElement.appendChild(crosshair);\r\n\r\n            const crosshair2 = document.createElement(\"div\");\r\n            crosshair2.classList.add(\"quick-grid-align-canvas-crosshair\");\r\n            crosshair2.style.width = `1px`;\r\n            crosshair2.style.height = `100%`;\r\n            crosshair2.style.left = `50%`;\r\n            crosshair2.style.top = `0px`;\r\n            dotElement.appendChild(crosshair2);\r\n        }\r\n\r\n        addCrosshair(dotStart);\r\n        addCrosshair(dotEnd);\r\n\r\n\r\n        let dot = dotStart;\r\n\r\n        const halfDotSize = dotSize / 2;\r\n\r\n        canvas.addEventListener(\"mousedown\", (event) => {\r\n            dot.style.display = \"block\";\r\n            canvas.style.cursor = \"none\";\r\n        });\r\n\r\n        canvas.addEventListener(\"mousemove\", (event) => {\r\n            const rect = canvasContainer.getBoundingClientRect();\r\n            const x = event.clientX - rect.left;\r\n            const y = event.clientY - rect.top;\r\n            dot.style.left = `${x - halfDotSize}px`;\r\n            dot.style.top = `${y - halfDotSize}px`;\r\n        });\r\n\r\n        canvas.addEventListener(\"mouseup\", (event) => {\r\n            canvas.style.cursor = \"default\";\r\n            const rect = canvasContainer.getBoundingClientRect();\r\n            const x = event.clientX - rect.left;\r\n            const y = event.clientY - rect.top;\r\n\r\n            dot.style.left = `${x - halfDotSize}px`;\r\n            dot.style.top = `${y - halfDotSize}px`;\r\n            const isStart = dot === dotStart;\r\n            dotPositions[isStart ? \"start\" : \"end\"].x = x;\r\n            dotPositions[isStart ? \"start\" : \"end\"].y = y;\r\n\r\n            if (!isStart) {\r\n                const startEndDist = Math.sqrt(Math.pow(dotPositions.start.x - dotPositions.end.x, 2) + Math.pow(dotPositions.start.y - dotPositions.end.y, 2));\r\n                measurements.push(startEndDist);\r\n                const avg = Math.round(measurements.reduce((a, b) => a + b, 0) / measurements.length);\r\n                redrawCanvas();\r\n                this.element[0].querySelector(`h3.form-header`).innerHTML = `<i class=\"fa-duotone fa-ruler-triangle\"></i> ${game.i18n.localize(\"quick-grid-align.quick-grid-align-app.dragAlign\")} | ${game.i18n.localize(\"quick-grid-align.quick-grid-align-app.measurementsTaken\")} - ${measurements.length}`\r\n                dotEnd.style.display = \"none\";\r\n                dotStart.style.display = \"none\";\r\n                dot = dotStart;\r\n                this.setSquaresFromCellRadius(avg, img.width, img.height);\r\n            } else {\r\n                dot = dotEnd;\r\n            }\r\n        });\r\n    }\r\n\r\n    setSquaresFromCellRadius(cellSide, imgWidth, imgHeight) {\r\n        const isHex = this.gridType.includes(\"HEX\");\r\n        const cellCount = {\r\n            x: 1,\r\n            y: 1,\r\n        };\r\n        if (isHex) {\r\n            const R = cellSide;\r\n            const S = R;\r\n            const ALPHA = S * f;\r\n            const overlap = S * 0.5;\r\n            const ALPHA_2 = ALPHA * 2;\r\n\r\n            const isRow = this.gridType.includes(\"R\");\r\n            if (isRow) {\r\n                cellCount.x = imgWidth / ALPHA_2;\r\n                cellCount.y = (imgHeight + overlap) / (S*2 - overlap);\r\n            } else {\r\n                cellCount.x = (imgWidth - overlap) / (S*2 - overlap);\r\n                cellCount.y = imgHeight / ALPHA_2;\r\n            }\r\n\r\n        } else {\r\n            const squareSide = cellSide;\r\n            cellCount.x = Math.round(imgWidth / squareSide);\r\n            cellCount.y = Math.round(imgHeight / squareSide);\r\n        }\r\n\r\n        //round to the closest multiple of 0.5\r\n        cellCount.x = Math.round(cellCount.x * 2) / 2;\r\n        cellCount.y = Math.round(cellCount.y * 2) / 2;\r\n\r\n        this.element[0].querySelector(`input[name=\"squareCount.x\"]`).value = cellCount.x;\r\n        this.element[0].querySelector(`input[name=\"squareCount.y\"]`).value = cellCount.y;\r\n\r\n        this._updateObject(null, this._getSubmitData())\r\n    }\r\n\r\n    async _updateObject(event, formData) {\r\n        formData = expandObject(formData);\r\n        const updateData = this[`_get${this.gridType}`](formData.squareCount.x, formData.squareCount.y);\r\n        updateData.width = Math.round(updateData.width);\r\n        updateData.height = Math.round(updateData.height);\r\n        await this.scene.update(updateData);\r\n    }\r\n\r\n    _getGRIDLESS(x, y) {\r\n        return {\r\n            width: x * this.gridSize,\r\n            height: y * this.gridSize,\r\n            grid: {\r\n                size: this.gridSize,\r\n            },\r\n        };\r\n    }\r\n\r\n    _getSQUARE(x, y) {\r\n        return {\r\n            width: x * this.gridSize,\r\n            height: y * this.gridSize,\r\n            grid: {\r\n                size: this.gridSize,\r\n            },\r\n        };\r\n    }\r\n\r\n    _getHEXEVENQ(x, y) {\r\n        return {\r\n            width: this.gridSize * (f * x + 2 - 2*f),\r\n            height: y * this.gridSize,\r\n            grid: {\r\n                size: this.gridSize,\r\n            },\r\n        };\r\n    }\r\n\r\n    _getHEXEVENR(x, y) {\r\n        return {\r\n            width: x * this.gridSize,\r\n            height: this.gridSize * (f * y + 2 - 2*f),\r\n            grid: {\r\n                size: this.gridSize,\r\n            },\r\n        };\r\n    }\r\n\r\n    _getHEXODDQ(x, y) {\r\n        return {\r\n            width: this.gridSize * (f * x + 2 - 2*f),\r\n            height: y * this.gridSize,\r\n            grid: {\r\n                size: this.gridSize,\r\n            },\r\n        };\r\n    }\r\n\r\n    _getHEXODDR(x, y) {\r\n        return {\r\n            width: x * this.gridSize,\r\n            height: this.gridSize * (f * y + 2 - 2*f),\r\n            grid: {\r\n                size: this.gridSize,\r\n            },\r\n        };\r\n    }\r\n}\r\n","import {initConfig} from \"./config.js\";\r\nimport {registerSettings} from \"./settings.js\";\r\n\r\nexport const MODULE_ID = \"quick-grid-align\";\r\n\r\nHooks.on(\"init\", () => {\r\n    initConfig();\r\n    registerSettings();\r\n});","import {MODULE_ID} from \"./main.js\";\r\nimport { QuickGridAlign } from \"./app.js\";\r\n\r\nexport function initConfig() {\r\n    Hooks.on(\"renderSceneConfig\", (app, html) => {\r\n        const quickGridButton = document.createElement(\"button\");\r\n        quickGridButton.class = MODULE_ID;\r\n        quickGridButton.dataset.tooltip = game.i18n.localize(`${MODULE_ID}.tooltip`);\r\n        quickGridButton.innerHTML = `<i class=\"fa-duotone fa-grid\"></i>`;\r\n        quickGridButton.addEventListener(\"click\", () => {\r\n            new QuickGridAlign(app.object).render(true);\r\n        });\r\n        html[0].querySelector(\".grid-config\").insertAdjacentElement(\"afterend\", quickGridButton);\r\n    });\r\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","_arrayLikeToArray","arr","len","length","i","arr2","Array","_regeneratorRuntime","Op","hasOwn","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_defineProperties","target","props","descriptor","input","hint","prim","toPrimitive","res","String","_toPrimitive","_get","Reflect","bind","property","receiver","base","_getPrototypeOf","_superPropBase","getOwnPropertyDescriptor","_setPrototypeOf","p","f","Math","sqrt","localeMap","GRIDLESS","HEXEVENQ","HEXEVENR","HEXODDQ","HEXODDR","SQUARE","QuickGridAlign","_FormApplication","subClass","superClass","_inherits","FormApplication","Constructor","protoProps","staticProps","_updateObject2","_createCanvasPreview","_getData","Derived","hasNativeReflectConstruct","_super","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","Super","NewTarget","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","scene","_canvas","_this","instance","_classCallCheck","canvas","gridType","entries","CONST","GRID_TYPES","find","_ref","isArray","_arrayWithHoles","_i","_s","_e","_x","_r","_arr","_n","_d","_iterableToArrayLimit","minLen","n","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","grid","gridSize","game","settings","MODULE_ID","i18n","localize","concat","this","APP_ID","_callee","_context","horizontal","round","dimensions","sceneWidth","size","vertical","sceneHeight","html","_html$","canvasContainer","querySelector","createCanvasPreview","_callee2","dotPositions","measurements","src","img","ctx","redrawCanvas","dotStart","dotEnd","addCrosshair","dot","_this2","_context2","dotElement","crosshair","document","createElement","classList","add","style","width","height","left","top","appendChild","crosshair2","console","log","randomX","random","randomY","drawImage","start","x","y","end","background","Image","onload","getContext","display","addEventListener","event","cursor","rect","getBoundingClientRect","clientX","clientY","dotSize","isStart","startEndDist","pow","avg","reduce","a","b","element","innerHTML","setSquaresFromCellRadius","_x2","cellSide","imgWidth","imgHeight","cellCount","includes","S","overlap","ALPHA_2","squareSide","_updateObject","_getSubmitData","_callee3","formData","updateData","_context3","expandObject","squareCount","update","_x3","_x4","mergeObject","id","template","popOut","resizable","minimizable","title","closeOnSubmit","Hooks","on","app","quickGridButton","dataset","tooltip","render","insertAdjacentElement","_Object$entries","_Object$entries$_i","register","registerSettingsArray","scope","config","default","Number"],"sourceRoot":""}